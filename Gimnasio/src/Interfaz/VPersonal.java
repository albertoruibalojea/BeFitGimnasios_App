package Interfaz;

import aplicacion.Establecimiento;
import aplicacion.ModeloTablaMonitores;
import aplicacion.Monitor;
import javax.swing.JTable;

/**
 *
 * @author alumnogreibd Numero de sesiones que imparte el monitor
 */
public class VPersonal extends javax.swing.JDialog {

    aplicacion.FachadaAplicacion fa;
    private String dni_monitor;
    private ModeloTablaMonitores mtm;
    private VPrincipal padre;
    private Integer establecimientoActual;
    private Monitor monitor;
    private Integer numSesiones;

    /**
     * Creates new form VPersonal
     */
    public VPersonal(java.awt.Frame parent, boolean modal, aplicacion.FachadaAplicacion fa) {
        super(parent, modal);
        this.fa = fa;
        initComponents();

        this.mtm = new ModeloTablaMonitores();
        tablaMonitores.setModel(mtm);
        if (mtm.getRowCount() > 0) {
            tablaMonitores.setRowSelectionInterval(0, 0);
        }
        textoSueldo.setEditable(false);
        textoContratacion.setEditable(false);
        establecimientoActual = getEstablecimientoActual().getId_establecimiento();

        btnLimpiar.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        textoDNIBuscar = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        textoDNI = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        textoNombre = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        textoEmail = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        textoContratacion = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        comboHorario = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        textoSueldo = new javax.swing.JTextField();
        btnLimpiar = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        btnDespedir = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaMonitores = new javax.swing.JTable();
        textoTelefono = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Gestión del personal");

        jLabel1.setText("DNI:");

        btnBuscar.setBackground(new java.awt.Color(255, 255, 255));
        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/search.png"))); // NOI18N
        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        jLabel2.setText("GESTIONAR DATOS DE UN/A MONITOR/A");

        jLabel3.setText("DNI:");

        jLabel4.setText("Nombre:");

        jLabel6.setText("E-mail:");

        jLabel7.setText("Teléfono:");

        textoContratacion.setMinimumSize(new java.awt.Dimension(4, 22));
        textoContratacion.setPreferredSize(new java.awt.Dimension(4, 22));

        jLabel8.setText("Horario:");

        comboHorario.setBackground(new java.awt.Color(255, 255, 255));
        comboHorario.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "Mañana", "Tarde" }));

        jLabel9.setText("Sueldo:");

        btnLimpiar.setBackground(new java.awt.Color(255, 255, 255));
        btnLimpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/clean.png"))); // NOI18N
        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        btnGuardar.setBackground(new java.awt.Color(255, 255, 255));
        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Save.png"))); // NOI18N
        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnDespedir.setBackground(new java.awt.Color(255, 255, 255));
        btnDespedir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/exit.png"))); // NOI18N
        btnDespedir.setText("Despedir");
        btnDespedir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDespedirActionPerformed(evt);
            }
        });

        tablaMonitores.setModel(new ModeloTablaMonitores());
        tablaMonitores.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaMonitoresMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tablaMonitores);

        jLabel5.setText("Año de contratación:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(textoDNIBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnBuscar))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 126, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnLimpiar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnGuardar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDespedir))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textoTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(comboHorario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(textoSueldo, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(textoEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(textoNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(19, 19, 19)
                                        .addComponent(textoDNI, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(textoContratacion, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(20, 20, 20))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(textoDNIBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscar)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(textoDNI, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(textoNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(textoEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(textoContratacion, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(textoTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(comboHorario, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)
                            .addComponent(textoSueldo, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnLimpiar)
                            .addComponent(btnGuardar)
                            .addComponent(btnDespedir))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        buscarMonitores();
        mtm = (ModeloTablaMonitores) tablaMonitores.getModel();
        dni_monitor = mtm.obtenerMonitor(tablaMonitores.getSelectedRow()).getDni();

        monitor = fa.visualizarMonitor(dni_monitor);
        textoDNI.setText(monitor.getDni());
        textoNombre.setText(monitor.getNombre());
        textoEmail.setText(monitor.getEmail());
        textoContratacion.setText((monitor.getAno_contratacion()).toString());
        textoSueldo.setText((monitor.getSueldo()).toString());
        textoTelefono.setText(monitor.getTelefono());

        int i = 0;
        if (monitor.getHorario().equalsIgnoreCase("mañana")) {
            i = 1;
        } else if (monitor.getHorario().equalsIgnoreCase("tarde")) {
            i = 2;
        } else {
            i = 0;
        }
        comboHorario.setSelectedIndex(i);

        textoDNI.setEditable(false);
        textoContratacion.setEditable(false);

        btnLimpiar.setEnabled(true);
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void tablaMonitoresMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaMonitoresMouseClicked
        JTable source = (JTable) evt.getSource();
        int row = source.rowAtPoint(evt.getPoint());
        int column = source.columnAtPoint(evt.getPoint());
        dni_monitor = source.getModel().getValueAt(row, 0) + "";
        Monitor m = fa.visualizarMonitor(dni_monitor);
        textoDNI.setText(m.getDni());
        textoNombre.setText(m.getNombre());
        textoEmail.setText(m.getEmail());
        textoContratacion.setText((monitor.getAno_contratacion()).toString());
        textoSueldo.setText((m.getSueldo()).toString());
        textoTelefono.setText(m.getTelefono());

        int i = 0;
        if (m.getHorario().equalsIgnoreCase("mañana")) {
            i = 1;
        } else if (m.getHorario().equalsIgnoreCase("tarde")) {
            i = 2;
        } else {
            i = 0;
        }
        comboHorario.setSelectedIndex(i);

        textoDNI.setEditable(false);
        textoContratacion.setEditable(false);
    }//GEN-LAST:event_tablaMonitoresMouseClicked

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed

        textoDNI.setText(null);
        textoNombre.setText(null);
        textoEmail.setText(null);
        textoContratacion.setText(null);
        textoSueldo.setText(null);
        textoContratacion.setText(null);
        textoTelefono.setText(null);
        comboHorario.setSelectedIndex(0);
        textoDNI.setEditable(true);

        textoSueldo.setEditable(false);
        textoContratacion.setEditable(false);

    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnDespedirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDespedirActionPerformed
        if (this.checkFields()) {
            this.fa.muestraExcepcion("¿Estás seguro/a de despedirlo/a?");
            boolean a = this.fa.comprobacionAdmin("¿DESPEDIR MONITOR/A?.");
            if (a) {
                fa.borrarMonitor(textoDNI.getText());
                this.actualizarTabla();
            }

        }
    }//GEN-LAST:event_btnDespedirActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        Monitor m;

        if (this.checkFields()) {
            String i = "";
            if (comboHorario.getSelectedIndex() == 1) {
                i = "mañana";
            } else if (comboHorario.getSelectedIndex() == 2) {
                i = "tarde";
            }

            m = new Monitor(textoDNI.getText(), textoNombre.getText(), textoTelefono.getText(), textoEmail.getText(), i, establecimientoActual);
            fa.actualizarMonitor(m);
            this.actualizarTabla();
        }
    }//GEN-LAST:event_btnGuardarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnDespedir;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JComboBox comboHorario;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tablaMonitores;
    private javax.swing.JTextField textoContratacion;
    private javax.swing.JTextField textoDNI;
    private javax.swing.JTextField textoDNIBuscar;
    private javax.swing.JTextField textoEmail;
    private javax.swing.JTextField textoNombre;
    private javax.swing.JTextField textoSueldo;
    private javax.swing.JTextField textoTelefono;
    // End of variables declaration//GEN-END:variables

    public void buscarMonitores() {
        ModeloTablaMonitores mtm;

        mtm = (ModeloTablaMonitores) tablaMonitores.getModel();
        java.util.List<Monitor> monitores = fa.obtenerMonitores((textoDNIBuscar.getText()), establecimientoActual);
        if (!monitores.isEmpty()) {
            mtm.setFilas(monitores);
            if (mtm.getRowCount() > 0) {
                tablaMonitores.setRowSelectionInterval(0, 0);
            }
        } else {
            fa.muestraExcepcion("Upps, aun no hay monitores/as. Añádelos.");
        }
    }

    private Establecimiento getEstablecimientoActual() {
        return fa.getEstablecimientoActual();
    }

    public boolean checkFields() {
        boolean horario = false;
        if (comboHorario.getSelectedIndex() != 0) {
            horario = true;
        }

        if (!textoDNI.getText().isEmpty() && !textoNombre.getText().isEmpty()
                && !textoEmail.getText().isEmpty() && !textoTelefono.getText().isEmpty() && horario) {
            if (textoDNI.getText().length() == 9) {
                if (textoTelefono.getText().length() == 9) {
                    try {
                        Integer num = Integer.parseInt(textoTelefono.getText());
                    } catch (Exception e) {
                        fa.muestraExcepcion("Ups, hay algún campo incorrecto.");
                    }
                } else fa.muestraExcepcion("Ups, hay algún campo incorrecto.");
            } else fa.muestraExcepcion("Ups, hay algún campo incorrecto.");
        }
        return false;
    }

    public void actualizarTabla() {
        buscarMonitores();
        this.mtm = (ModeloTablaMonitores) tablaMonitores.getModel();
        dni_monitor = this.mtm.obtenerMonitor(tablaMonitores.getSelectedRow()).getDni();

        Monitor m = fa.visualizarMonitor(dni_monitor);
        textoDNI.setText(m.getDni());
        textoNombre.setText(m.getNombre());
        textoEmail.setText(m.getEmail());
        textoContratacion.setText((monitor.getAno_contratacion()).toString());
        textoSueldo.setText((m.getSueldo()).toString());
        textoTelefono.setText(m.getTelefono());

        int i = 0;
        if (m.getHorario().equalsIgnoreCase("mañana")) {
            i = 1;
        } else if (m.getHorario().equalsIgnoreCase("tarde")) {
            i = 2;
        } else {
            i = 0;
        }
        comboHorario.setSelectedIndex(i);

        this.tablaMonitores.updateUI();
    }
}
