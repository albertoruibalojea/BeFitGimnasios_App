/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaz;

import aplicacion.Actividad;
import aplicacion.ModeloTablaActividades;
import aplicacion.ModeloTablaMonitores;
import aplicacion.Monitor;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTable;

/**
 *
 * @author alumnogreibd
 */
public class VCrearSesion extends javax.swing.JDialog {
    
    aplicacion.FachadaAplicacion fa;
    private ModeloTablaActividades mta;
    private ModeloTablaMonitores mtm;
    private Integer establecimiento;
    private Actividad actividad;
    private Monitor monitor;
    
    public VCrearSesion(java.awt.Frame parent, boolean modal, aplicacion.FachadaAplicacion fa) {
        super(parent, modal);
        this.fa = fa;
        initComponents();
        
        this.mta = new ModeloTablaActividades();
        tablaActividades.setModel(mta);
        if (mta.getRowCount() > 0) {
            tablaActividades.setRowSelectionInterval(0, 0);
        }
        
        this.mtm = new ModeloTablaMonitores();
        tablaMonitores.setModel(mtm);
        if (mtm.getRowCount() > 0) {
            tablaMonitores.setRowSelectionInterval(0, 0);
        }
        
        this.establecimiento = fa.getEstablecimientoActual().getId_establecimiento();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        textoNombreActividad = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaActividades = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        btnBuscarActividad = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel11 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        textoFecha = new javax.swing.JFormattedTextField();
        comboHora = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        btnBuscarMonitor = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablaMonitores = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel13 = new javax.swing.JLabel();
        textoIDActividad = new javax.swing.JFormattedTextField();
        textoNumPlazas = new javax.swing.JFormattedTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        btnCrearSesion = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Crear sesión");

        jLabel1.setText("ID: ");

        jLabel2.setText("Nombre:");

        tablaActividades.setModel(new ModeloTablaActividades());
        tablaActividades.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaActividadesMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tablaActividades);

        jLabel10.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel10.setText("PASO 1: SELECCIÓN ACTIVIDAD");

        btnBuscarActividad.setBackground(new java.awt.Color(255, 255, 255));
        btnBuscarActividad.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/search.png"))); // NOI18N
        btnBuscarActividad.setText("Buscar");
        btnBuscarActividad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActividadActionPerformed(evt);
            }
        });

        jSeparator1.setForeground(new java.awt.Color(0, 0, 0));
        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel11.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel11.setText("PASO 2: SELECCIÓN FECHA");

        jLabel3.setText("Fecha  (dd/MM/yyyy):");

        textoFecha.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd/MM/yyyy"))));

        comboHora.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "9:00", "10:00", "11:00", "12:00", "13:00", "15:00", "16:00", "17:00", "18:00", "19:00", "20:00" }));

        jLabel4.setText("Hora:");

        jSeparator2.setForeground(new java.awt.Color(0, 0, 0));

        btnBuscarMonitor.setBackground(new java.awt.Color(255, 255, 255));
        btnBuscarMonitor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/search.png"))); // NOI18N
        btnBuscarMonitor.setText("Buscar");
        btnBuscarMonitor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarMonitorActionPerformed(evt);
            }
        });

        tablaMonitores.setModel(new ModeloTablaMonitores());
        tablaMonitores.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaMonitoresMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tablaMonitores);

        jLabel12.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel12.setText("PASO 3: SELECCIÓN MONITOR");

        jSeparator3.setForeground(new java.awt.Color(0, 0, 0));

        jLabel13.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel13.setText("PASO 4: NÚMERO DE PLAZAS Y DURACIÓN");

        textoIDActividad.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));

        textoNumPlazas.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));

        jLabel6.setText("Número de plazas:");

        btnCrearSesion.setBackground(new java.awt.Color(255, 255, 255));
        btnCrearSesion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Save.png"))); // NOI18N
        btnCrearSesion.setText("CREAR SESIÓN");
        btnCrearSesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearSesionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addComponent(jLabel3)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel10)
                            .addGap(67, 67, 67))
                        .addComponent(btnBuscarActividad)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(textoIDActividad, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jLabel2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(textoNombreActividad, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(textoFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(31, 31, 31)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(textoNumPlazas, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addComponent(jLabel13)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel12)
                                        .addComponent(jLabel5))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btnBuscarMonitor))
                                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(114, 114, 114)
                        .addComponent(btnCrearSesion)))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel12)
                    .addComponent(btnBuscarMonitor))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel5)
                    .addComponent(textoIDActividad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(textoNombreActividad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(btnBuscarActividad)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textoFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel13)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(textoNumPlazas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnCrearSesion)
                        .addGap(60, 60, 60))))
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 463, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscarActividadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActividadActionPerformed
        buscarActividades();
    }//GEN-LAST:event_btnBuscarActividadActionPerformed

    private void btnBuscarMonitorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarMonitorActionPerformed
        try {            
            buscarMonitores();
        } catch (ParseException ex) {
            Logger.getLogger(VCrearSesion.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnBuscarMonitorActionPerformed

    private void btnCrearSesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearSesionActionPerformed
        try {
            anadhirsesion();
        } catch (ParseException ex) {
            Logger.getLogger(VCrearSesion.class.getName()).log(Level.SEVERE, null, ex);
            fa.muestraExcepcion("Es necesario establecer el número de plazas.");
        }
    }//GEN-LAST:event_btnCrearSesionActionPerformed

    private void tablaActividadesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaActividadesMouseClicked
        JTable source = (JTable) evt.getSource();
        int row = source.rowAtPoint(evt.getPoint());
        Integer id_actividad = (Integer) source.getModel().getValueAt(row, 0);
        
        this.actividad = fa.consultarActividad(id_actividad);
    }//GEN-LAST:event_tablaActividadesMouseClicked

    private void tablaMonitoresMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaMonitoresMouseClicked
        JTable source = (JTable) evt.getSource();
        int row = source.rowAtPoint(evt.getPoint());
        String dni_monitor = (String) source.getModel().getValueAt(row, 0);
        
        this.monitor = fa.visualizarMonitor(dni_monitor);
    }//GEN-LAST:event_tablaMonitoresMouseClicked

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscarActividad;
    private javax.swing.JButton btnBuscarMonitor;
    private javax.swing.JButton btnCrearSesion;
    private javax.swing.JComboBox comboHora;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTable tablaActividades;
    private javax.swing.JTable tablaMonitores;
    private javax.swing.JFormattedTextField textoFecha;
    private javax.swing.JFormattedTextField textoIDActividad;
    private javax.swing.JTextField textoNombreActividad;
    private javax.swing.JFormattedTextField textoNumPlazas;
    // End of variables declaration//GEN-END:variables

    private int obtenerHora(int valor) {
        int hora = -1;
        
        switch (valor) {
            case 1:
                hora = 9;
                break;
            case 2:
                hora = 10;
                break;
            case 3:
                hora = 11;
                break;
            case 4:
                hora = 12;
                break;
            case 5:
                hora = 13;
                break;
            case 6:
                hora = 15;
                break;
            case 7:
                hora = 16;
                break;
            case 8:
                hora = 17;
                break;
            case 9:
                hora = 18;
                break;
            case 10:
                hora = 19;
                break;
            case 11:
                hora = 20;
                break;
            
        }
        return hora;
    }
    
    private String obtenerHorario(int valor) {
        String horario = "";
        
        switch (valor) {
            case 0:
                horario = " ";
                break;
            case 1:
                horario = "mañana";
                break;
            case 2:
                horario = "mañana";
                break;
            case 3:
                horario = "mañana";
                break;
            case 4:
                horario = "mañana";
                break;
            case 5:
                horario = "mañana";
                break;
            case 6:
                horario = "tarde";
                break;
            case 7:
                horario = "tarde";
                break;
            case 8:
                horario = "tarde";
                break;
            case 9:
                horario = "tarde";
                break;
            case 10:
                horario = "tarde";
                break;
            case 11:
                horario = "tarde";
                break;
            
        }
        
        return horario;
    }
    
    public void buscarActividades() {
        ModeloTablaActividades mta;
        mta = (ModeloTablaActividades) tablaActividades.getModel();
        
        try {
            if (!textoIDActividad.getText().isEmpty() && !textoNombreActividad.getText().isEmpty()) {
                mta.setFilas(fa.obtenerActividades(Integer.parseInt(textoIDActividad.getText()), textoNombreActividad.getText()));
            } else if (!textoIDActividad.getText().isEmpty() && textoNombreActividad.getText().isEmpty()) {
                mta.setFilas(fa.obtenerActividades(Integer.parseInt(textoIDActividad.getText())));
            } else if (textoIDActividad.getText().isEmpty() && !textoNombreActividad.getText().isEmpty()) {
                mta.setFilas(fa.obtenerActividades(textoNombreActividad.getText()));
            } else if (textoIDActividad.getText().isEmpty() && textoNombreActividad.getText().isEmpty()) {
                mta.setFilas(fa.obtenerActividades());
            }
            
        } catch (Exception e) {
            this.fa.muestraExcepcion("Ooops, algo ha salido mal en la búsqueda.");
        }
        
        if (mta.getRowCount() > 0) {
            tablaActividades.setRowSelectionInterval(0, 0);
        }
    }
    
    public String diaSeleccionado() throws ParseException {
        Calendar fecha = null;
        String d1 = "", d2 = "";
        SimpleDateFormat sdf = null;
        if (textoFecha.getText() != null && textoFecha.getText().length() > 0) {
            try {
                sdf = new SimpleDateFormat("dd/MM/yyyy");
                Date date;
                date = sdf.parse(textoFecha.getText());
                fecha = Calendar.getInstance();
                fecha.setTime(date);
                d1 = sdf.format(fecha.getTime());
            } catch (ParseException ex) {
                fecha = null;
            }
            
            if (comboHora.getSelectedIndex() != 0) {
                
                int hora = this.obtenerHora(comboHora.getSelectedIndex());
                String horas = String.valueOf(hora);
                
                d2 = d1 + " " + horas + ":00:00";
                return d2;
                
            } else {
                fa.muestraExcepcion("Seleccione una hora");
            }
        }
        
        return null;
        
    }
    
    public void buscarMonitores() throws ParseException {
        int i = 0;
        
        String horario = this.obtenerHorario(comboHora.getSelectedIndex());
        String fecha_inicio = this.diaSeleccionado();
        
        ModeloTablaMonitores mtm;
        mtm = (ModeloTablaMonitores) tablaMonitores.getModel();
        
        try {
            java.util.List<Monitor> disponibles = fa.obtenerPosiblesMonitores(establecimiento, fecha_inicio, horario);
            if (!disponibles.isEmpty()) {
                mtm.setFilas(disponibles);
            } else {
                fa.muestraExcepcion("No existen monitores/as disponibles en este momento.");
            }
        } catch (Exception e) {
            this.fa.muestraExcepcion("Algo ha salido mal.");
        }
        
        if (mtm.getRowCount() > 0) {
            tablaMonitores.setRowSelectionInterval(0, 0);
        }
    }
    
    public void anadhirsesion() throws ParseException {
        Integer numplazas = Integer.parseInt(textoNumPlazas.getText());
        this.fa.insertarSesion(actividad, monitor, this.diaSeleccionado(), numplazas, establecimiento);
    }
}
